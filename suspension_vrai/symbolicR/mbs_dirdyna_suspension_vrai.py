#
#	MBsysTran - Release 8.1
#
#	Copyright 
#	Universite catholique de Louvain (UCLouvain) 
#	Mechatronic, Electrical Energy, and Dynamic systems (MEED Division) 
#	2, Place du Levant
#	1348 Louvain-la-Neuve 
#	Belgium 
#
#	http://www.robotran.be 
#
#	==> Generation Date: Thu Mar 20 14:58:16 2025
#	==> using automatic loading with extension .mbs 
#
#	==> Project name: suspension_vrai
#
#	==> Number of joints: 12
#
#	==> Function: F1 - Recursive Direct Dynamics of tree-like MBS
#
#	==> Git hash: a9259031f25de7c9f86dbac08464ef31e84ae3b1
#
#	==> Input XML
#

from math import sin, cos

def dirdyna(M, c, s, tsim):
    q = s.q
    qd = s.qd
 
# Trigonometric functions

    S4 = sin(q[4])
    C4 = cos(q[4])
    S5 = sin(q[5])
    C5 = cos(q[5])
    S6 = sin(q[6])
    C6 = cos(q[6])
    S7 = sin(q[7])
    C7 = cos(q[7])
    S8 = sin(q[8])
    C8 = cos(q[8])
    S9 = sin(q[9])
    C9 = cos(q[9])
    S10 = sin(q[10])
    C10 = cos(q[10])
    S11 = sin(q[11])
    C11 = cos(q[11])
    S12 = sin(q[12])
    C12 = cos(q[12])
    C10p9 = C10*C9-S10*S9
    S10p9 = C10*S9+S10*C9
 
# Forward Kinematics

    OM15 = qd[4]*C5
    OM35 = qd[4]*S5
    OA15 = -qd[4]*qd[5]*S5
    OA35 = qd[4]*qd[5]*C5
    AM15_2 = S4*S5
    AM35_2 = -S4*C5
    AM15_3 = -C4*S5
    AM35_3 = C4*C5
    OM16 = qd[5]*S6+OM15*C6
    OM26 = qd[5]*C6-OM15*S6
    OM36 = qd[6]+OM35
    OA16 = -qd[6]*OM15*S6+C6*(OA15+qd[5]*qd[6])
    OA26 = -qd[6]*OM15*C6-S6*(OA15+qd[5]*qd[6])
    BS16 = -OM26*OM26-OM36*OM36
    BS26 = OM16*OM26
    BS36 = OM16*OM36
    BS56 = -OM16*OM16-OM36*OM36
    BS66 = OM26*OM36
    BS96 = -OM16*OM16-OM26*OM26
    BEF26 = BS26-OA35
    BEF36 = BS36+OA26
    BEF46 = BS26+OA35
    BEF66 = BS66-OA16
    BEF76 = BS36-OA26
    BEF86 = BS66+OA16
    AM16_1 = C5*C6
    AM26_1 = -C5*S6
    AM16_2 = AM15_2*C6+C4*S6
    AM26_2 = -AM15_2*S6+C4*C6
    AM16_3 = AM15_3*C6+S4*S6
    AM26_3 = -AM15_3*S6+S4*C6
    OB16_4 = C5*C6
    OB26_4 = -C5*S6
    AF17 = BEF26*s.dpt[2,2]+BEF36*s.dpt[3,2]+BS16*s.dpt[1,2]
    AF27 = C7*(BEF46*s.dpt[1,2]+BEF66*s.dpt[3,2]+BS56*s.dpt[2,2])+S7*(BEF76*s.dpt[1,2]+BEF86*s.dpt[2,2]+BS96*s.dpt[3,2])
    AF37 = C7*(BEF76*s.dpt[1,2]+BEF86*s.dpt[2,2]+BS96*s.dpt[3,2])-S7*(BEF46*s.dpt[1,2]+BEF66*s.dpt[3,2]+BS56*s.dpt[2,2])
    AM27_1 = AM26_1*C7+S5*S7
    AM37_1 = -AM26_1*S7+S5*C7
    AM27_2 = AM26_2*C7+AM35_2*S7
    AM37_2 = -AM26_2*S7+AM35_2*C7
    AM27_3 = AM26_3*C7+AM35_3*S7
    AM37_3 = -AM26_3*S7+AM35_3*C7
    AM17_4 = OB26_4*s.dpt[3,2]-s.dpt[2,2]*S5
    AM27_4 = C7*(-OB16_4*s.dpt[3,2]+s.dpt[1,2]*S5)+S7*(OB16_4*s.dpt[2,2]-OB26_4*s.dpt[1,2])
    AM37_4 = C7*(OB16_4*s.dpt[2,2]-OB26_4*s.dpt[1,2])-S7*(-OB16_4*s.dpt[3,2]+s.dpt[1,2]*S5)
    AM17_5 = s.dpt[3,2]*C6
    AM27_5 = -s.dpt[3,2]*S6*C7+S7*(-s.dpt[1,2]*C6+s.dpt[2,2]*S6)
    AM37_5 = s.dpt[3,2]*S6*S7+C7*(-s.dpt[1,2]*C6+s.dpt[2,2]*S6)
    AM27_6 = s.dpt[1,2]*C7
    AM37_6 = -s.dpt[1,2]*S7
    OM18 = qd[8]+OM16
    OM28 = OM26*C8+OM36*S8
    OM38 = -OM26*S8+OM36*C8
    OA28 = C8*(OA26+qd[8]*OM36)+S8*(OA35-qd[8]*OM26)
    OA38 = C8*(OA35-qd[8]*OM26)-S8*(OA26+qd[8]*OM36)
    BS28 = OM18*OM28
    BS58 = -OM18*OM18-OM38*OM38
    BS68 = OM28*OM38
    BEF28 = BS28-OA38
    BEF88 = BS68+OA16
    AF18 = BEF26*s.dpt[2,3]+BS16*s.dpt[1,3]
    AF28 = C8*(BEF46*s.dpt[1,3]+BS56*s.dpt[2,3])+S8*(BEF76*s.dpt[1,3]+BEF86*s.dpt[2,3])
    AF38 = C8*(BEF76*s.dpt[1,3]+BEF86*s.dpt[2,3])-S8*(BEF46*s.dpt[1,3]+BS56*s.dpt[2,3])
    AM28_1 = AM26_1*C8+S5*S8
    AM38_1 = -AM26_1*S8+S5*C8
    AM28_2 = AM26_2*C8+AM35_2*S8
    AM38_2 = -AM26_2*S8+AM35_2*C8
    AM28_3 = AM26_3*C8+AM35_3*S8
    AM38_3 = -AM26_3*S8+AM35_3*C8
    OB28_4 = OB26_4*C8+S5*S8
    OB38_4 = -OB26_4*S8+S5*C8
    AM18_4 = -s.dpt[2,3]*S5
    AM28_4 = s.dpt[1,3]*S5*C8+S8*(OB16_4*s.dpt[2,3]-OB26_4*s.dpt[1,3])
    AM38_4 = -s.dpt[1,3]*S5*S8+C8*(OB16_4*s.dpt[2,3]-OB26_4*s.dpt[1,3])
    OB28_5 = C6*C8
    OB38_5 = -C6*S8
    AM28_5 = S8*(-s.dpt[1,3]*C6+s.dpt[2,3]*S6)
    AM38_5 = C8*(-s.dpt[1,3]*C6+s.dpt[2,3]*S6)
    AM28_6 = s.dpt[1,3]*C8
    AM38_6 = -s.dpt[1,3]*S8
    OM19 = OM18*C9-OM38*S9
    OM29 = qd[9]+OM28
    OM39 = OM18*S9+OM38*C9
    OA19 = C9*(OA16-qd[9]*OM38)-S9*(OA38+qd[9]*OM18)
    OA39 = C9*(OA38+qd[9]*OM18)+S9*(OA16-qd[9]*OM38)
    BS29 = OM19*OM29
    BS39 = OM19*OM39
    BS59 = -OM19*OM19-OM39*OM39
    BS69 = OM29*OM39
    BS99 = -OM19*OM19-OM29*OM29
    BEF29 = BS29-OA39
    BEF39 = BS39+OA28
    BEF69 = BS69-OA19
    BEF89 = BS69+OA19
    AF19 = C9*(AF18+BEF28*s.dpt[2,8])-S9*(AF38+BEF88*s.dpt[2,8])
    AF29 = AF28+BS58*s.dpt[2,8]
    AF39 = C9*(AF38+BEF88*s.dpt[2,8])+S9*(AF18+BEF28*s.dpt[2,8])
    AM19_1 = AM16_1*C9-AM38_1*S9
    AM39_1 = AM16_1*S9+AM38_1*C9
    AM19_2 = AM16_2*C9-AM38_2*S9
    AM39_2 = AM16_2*S9+AM38_2*C9
    AM19_3 = AM16_3*C9-AM38_3*S9
    AM39_3 = AM16_3*S9+AM38_3*C9
    OB19_4 = OB16_4*C9-OB38_4*S9
    OB39_4 = OB16_4*S9+OB38_4*C9
    AM19_4 = C9*(AM18_4-OB38_4*s.dpt[2,8])-S9*(AM38_4+OB16_4*s.dpt[2,8])
    AM39_4 = C9*(AM38_4+OB16_4*s.dpt[2,8])+S9*(AM18_4-OB38_4*s.dpt[2,8])
    OB19_5 = -OB38_5*S9+S6*C9
    OB39_5 = OB38_5*C9+S6*S9
    AM19_5 = -OB38_5*s.dpt[2,8]*C9-S9*(AM38_5+s.dpt[2,8]*S6)
    AM39_5 = -OB38_5*s.dpt[2,8]*S9+C9*(AM38_5+s.dpt[2,8]*S6)
    OB19_6 = -C8*S9
    OB39_6 = C8*C9
    AM19_6 = -AM38_6*S9+C9*(-s.dpt[2,3]-s.dpt[2,8]*C8)
    AM39_6 = AM38_6*C9+S9*(-s.dpt[2,3]-s.dpt[2,8]*C8)
    AM19_8 = -s.dpt[2,8]*S9
    AM39_8 = s.dpt[2,8]*C9
    AF110 = C10*(AF19+BEF29*s.dpt[2,11]+BEF39*s.dpt[3,11])-S10*(AF39+BEF89*s.dpt[2,11]+BS99*s.dpt[3,11])
    AF210 = AF29+BEF69*s.dpt[3,11]+BS59*s.dpt[2,11]
    AF310 = C10*(AF39+BEF89*s.dpt[2,11]+BS99*s.dpt[3,11])+S10*(AF19+BEF29*s.dpt[2,11]+BEF39*s.dpt[3,11])
    AM110_1 = AM19_1*C10-AM39_1*S10
    AM310_1 = AM19_1*S10+AM39_1*C10
    AM110_2 = AM19_2*C10-AM39_2*S10
    AM310_2 = AM19_2*S10+AM39_2*C10
    AM110_3 = AM19_3*C10-AM39_3*S10
    AM310_3 = AM19_3*S10+AM39_3*C10
    AM110_4 = C10*(AM19_4+OB28_4*s.dpt[3,11]-OB39_4*s.dpt[2,11])-S10*(AM39_4+OB19_4*s.dpt[2,11])
    AM210_4 = AM28_4-OB19_4*s.dpt[3,11]
    AM310_4 = C10*(AM39_4+OB19_4*s.dpt[2,11])+S10*(AM19_4+OB28_4*s.dpt[3,11]-OB39_4*s.dpt[2,11])
    AM110_5 = C10*(AM19_5+OB28_5*s.dpt[3,11]-OB39_5*s.dpt[2,11])-S10*(AM39_5+OB19_5*s.dpt[2,11])
    AM210_5 = AM28_5-OB19_5*s.dpt[3,11]
    AM310_5 = C10*(AM39_5+OB19_5*s.dpt[2,11])+S10*(AM19_5+OB28_5*s.dpt[3,11]-OB39_5*s.dpt[2,11])
    AM110_6 = C10*(AM19_6-OB39_6*s.dpt[2,11]+s.dpt[3,11]*S8)-S10*(AM39_6+OB19_6*s.dpt[2,11])
    AM210_6 = AM28_6-OB19_6*s.dpt[3,11]
    AM310_6 = C10*(AM39_6+OB19_6*s.dpt[2,11])+S10*(AM19_6-OB39_6*s.dpt[2,11]+s.dpt[3,11]*S8)
    AM110_8 = C10*(AM19_8-s.dpt[2,11]*S9)-S10*(AM39_8+s.dpt[2,11]*C9)
    AM210_8 = -s.dpt[3,11]*C9
    AM310_8 = C10*(AM39_8+s.dpt[2,11]*C9)+S10*(AM19_8-s.dpt[2,11]*S9)
    AM110_9 = s.dpt[3,11]*C10
    AM310_9 = s.dpt[3,11]*S10
 
# Backward Dynamics

    FA110 = -s.frc[1,10]+s.m[10]*AF110
    FA210 = -s.frc[2,10]+s.m[10]*AF210
    FA310 = -s.frc[3,10]+s.m[10]*AF310
    FB110_1 = s.m[10]*AM110_1
    FB210_1 = s.m[10]*AM28_1
    FB310_1 = s.m[10]*AM310_1
    FB110_2 = s.m[10]*AM110_2
    FB210_2 = s.m[10]*AM28_2
    FB310_2 = s.m[10]*AM310_2
    FB110_3 = s.m[10]*AM110_3
    FB210_3 = s.m[10]*AM28_3
    FB310_3 = s.m[10]*AM310_3
    FB110_4 = s.m[10]*AM110_4
    FB210_4 = s.m[10]*AM210_4
    FB310_4 = s.m[10]*AM310_4
    FB110_5 = s.m[10]*AM110_5
    FB210_5 = s.m[10]*AM210_5
    FB310_5 = s.m[10]*AM310_5
    FB110_6 = s.m[10]*AM110_6
    FB210_6 = s.m[10]*AM210_6
    FB310_6 = s.m[10]*AM310_6
    FB110_8 = s.m[10]*AM110_8
    FB210_8 = s.m[10]*AM210_8
    FB310_8 = s.m[10]*AM310_8
    FB110_9 = s.m[10]*AM110_9
    FB310_9 = s.m[10]*AM310_9
    FA19 = -s.frc[1,9]+s.m[9]*AF19
    FA29 = -s.frc[2,9]+s.m[9]*AF29
    FA39 = -s.frc[3,9]+s.m[9]*AF39
    FF19 = FA19+FA110*C10+FA310*S10
    FF29 = FA210+FA29
    FF39 = FA39-FA110*S10+FA310*C10
    CF19 = -s.trq[1,9]-s.trq[1,10]*C10-s.trq[3,10]*S10-FA210*s.dpt[3,11]+s.dpt[2,11]*(-FA110*S10+FA310*C10)
    CF29 = -s.trq[2,10]-s.trq[2,9]+s.dpt[3,11]*(FA110*C10+FA310*S10)
    CF39 = -s.trq[3,9]+s.trq[1,10]*S10-s.trq[3,10]*C10-s.dpt[2,11]*(FA110*C10+FA310*S10)
    FB19_1 = s.m[9]*AM19_1
    FB29_1 = s.m[9]*AM28_1
    FB39_1 = s.m[9]*AM39_1
    FM19_1 = FB19_1+FB110_1*C10+FB310_1*S10
    FM29_1 = FB210_1+FB29_1
    FM39_1 = FB39_1-FB110_1*S10+FB310_1*C10
    CM19_1 = -FB210_1*s.dpt[3,11]+s.dpt[2,11]*(-FB110_1*S10+FB310_1*C10)
    CM29_1 = s.dpt[3,11]*(FB110_1*C10+FB310_1*S10)
    CM39_1 = -s.dpt[2,11]*(FB110_1*C10+FB310_1*S10)
    FB19_2 = s.m[9]*AM19_2
    FB29_2 = s.m[9]*AM28_2
    FB39_2 = s.m[9]*AM39_2
    FM19_2 = FB19_2+FB110_2*C10+FB310_2*S10
    FM29_2 = FB210_2+FB29_2
    FM39_2 = FB39_2-FB110_2*S10+FB310_2*C10
    CM19_2 = -FB210_2*s.dpt[3,11]+s.dpt[2,11]*(-FB110_2*S10+FB310_2*C10)
    CM29_2 = s.dpt[3,11]*(FB110_2*C10+FB310_2*S10)
    CM39_2 = -s.dpt[2,11]*(FB110_2*C10+FB310_2*S10)
    FB19_3 = s.m[9]*AM19_3
    FB29_3 = s.m[9]*AM28_3
    FB39_3 = s.m[9]*AM39_3
    FM19_3 = FB19_3+FB110_3*C10+FB310_3*S10
    FM29_3 = FB210_3+FB29_3
    FM39_3 = FB39_3-FB110_3*S10+FB310_3*C10
    CM19_3 = -FB210_3*s.dpt[3,11]+s.dpt[2,11]*(-FB110_3*S10+FB310_3*C10)
    CM29_3 = s.dpt[3,11]*(FB110_3*C10+FB310_3*S10)
    CM39_3 = -s.dpt[2,11]*(FB110_3*C10+FB310_3*S10)
    FB19_4 = s.m[9]*AM19_4
    FB29_4 = s.m[9]*AM28_4
    FB39_4 = s.m[9]*AM39_4
    FM19_4 = FB19_4+FB110_4*C10+FB310_4*S10
    FM29_4 = FB210_4+FB29_4
    FM39_4 = FB39_4-FB110_4*S10+FB310_4*C10
    CM19_4 = -FB210_4*s.dpt[3,11]+s.dpt[2,11]*(-FB110_4*S10+FB310_4*C10)
    CM29_4 = s.dpt[3,11]*(FB110_4*C10+FB310_4*S10)
    CM39_4 = -s.dpt[2,11]*(FB110_4*C10+FB310_4*S10)
    FB19_5 = s.m[9]*AM19_5
    FB29_5 = s.m[9]*AM28_5
    FB39_5 = s.m[9]*AM39_5
    FM19_5 = FB19_5+FB110_5*C10+FB310_5*S10
    FM29_5 = FB210_5+FB29_5
    FM39_5 = FB39_5-FB110_5*S10+FB310_5*C10
    CM19_5 = -FB210_5*s.dpt[3,11]+s.dpt[2,11]*(-FB110_5*S10+FB310_5*C10)
    CM29_5 = s.dpt[3,11]*(FB110_5*C10+FB310_5*S10)
    CM39_5 = -s.dpt[2,11]*(FB110_5*C10+FB310_5*S10)
    FB19_6 = s.m[9]*AM19_6
    FB29_6 = s.m[9]*AM28_6
    FB39_6 = s.m[9]*AM39_6
    FM19_6 = FB19_6+FB110_6*C10+FB310_6*S10
    FM29_6 = FB210_6+FB29_6
    FM39_6 = FB39_6-FB110_6*S10+FB310_6*C10
    CM19_6 = -FB210_6*s.dpt[3,11]+s.dpt[2,11]*(-FB110_6*S10+FB310_6*C10)
    CM29_6 = s.dpt[3,11]*(FB110_6*C10+FB310_6*S10)
    CM39_6 = -s.dpt[2,11]*(FB110_6*C10+FB310_6*S10)
    FB19_8 = s.m[9]*AM19_8
    FB39_8 = s.m[9]*AM39_8
    FM19_8 = FB19_8+FB110_8*C10+FB310_8*S10
    FM39_8 = FB39_8-FB110_8*S10+FB310_8*C10
    CM19_8 = -FB210_8*s.dpt[3,11]+s.dpt[2,11]*(-FB110_8*S10+FB310_8*C10)
    CM29_8 = s.dpt[3,11]*(FB110_8*C10+FB310_8*S10)
    CM39_8 = -s.dpt[2,11]*(FB110_8*C10+FB310_8*S10)
    CM29_9 = s.dpt[3,11]*(FB110_9*C10+FB310_9*S10)
    FA18 = -s.frc[1,8]+s.m[8]*AF18
    FA28 = -s.frc[2,8]+s.m[8]*AF28
    FA38 = -s.frc[3,8]+s.m[8]*AF38
    FF18 = FA18+FF19*C9+FF39*S9
    FF28 = FA28+FF29
    FF38 = FA38-FF19*S9+FF39*C9
    CF18 = -s.trq[1,8]+CF19*C9+CF39*S9+s.dpt[2,8]*(-FF19*S9+FF39*C9)
    CF28 = -s.trq[2,8]+CF29
    CF38 = -s.trq[3,8]-CF19*S9+CF39*C9-s.dpt[2,8]*(FF19*C9+FF39*S9)
    FB18_1 = s.m[8]*AM16_1
    FB28_1 = s.m[8]*AM28_1
    FB38_1 = s.m[8]*AM38_1
    FM18_1 = FB18_1+FM19_1*C9+FM39_1*S9
    FM28_1 = FB28_1+FM29_1
    FM38_1 = FB38_1-FM19_1*S9+FM39_1*C9
    CM18_1 = CM19_1*C9+CM39_1*S9+s.dpt[2,8]*(-FM19_1*S9+FM39_1*C9)
    CM38_1 = -CM19_1*S9+CM39_1*C9-s.dpt[2,8]*(FM19_1*C9+FM39_1*S9)
    FB18_2 = s.m[8]*AM16_2
    FB28_2 = s.m[8]*AM28_2
    FB38_2 = s.m[8]*AM38_2
    FM18_2 = FB18_2+FM19_2*C9+FM39_2*S9
    FM28_2 = FB28_2+FM29_2
    FM38_2 = FB38_2-FM19_2*S9+FM39_2*C9
    CM18_2 = CM19_2*C9+CM39_2*S9+s.dpt[2,8]*(-FM19_2*S9+FM39_2*C9)
    CM38_2 = -CM19_2*S9+CM39_2*C9-s.dpt[2,8]*(FM19_2*C9+FM39_2*S9)
    FB18_3 = s.m[8]*AM16_3
    FB28_3 = s.m[8]*AM28_3
    FB38_3 = s.m[8]*AM38_3
    FM18_3 = FB18_3+FM19_3*C9+FM39_3*S9
    FM28_3 = FB28_3+FM29_3
    FM38_3 = FB38_3-FM19_3*S9+FM39_3*C9
    CM18_3 = CM19_3*C9+CM39_3*S9+s.dpt[2,8]*(-FM19_3*S9+FM39_3*C9)
    CM38_3 = -CM19_3*S9+CM39_3*C9-s.dpt[2,8]*(FM19_3*C9+FM39_3*S9)
    FB18_4 = s.m[8]*AM18_4
    FB28_4 = s.m[8]*AM28_4
    FB38_4 = s.m[8]*AM38_4
    FM18_4 = FB18_4+FM19_4*C9+FM39_4*S9
    FM28_4 = FB28_4+FM29_4
    FM38_4 = FB38_4-FM19_4*S9+FM39_4*C9
    CM18_4 = CM19_4*C9+CM39_4*S9+s.dpt[2,8]*(-FM19_4*S9+FM39_4*C9)
    CM38_4 = -CM19_4*S9+CM39_4*C9-s.dpt[2,8]*(FM19_4*C9+FM39_4*S9)
    FB28_5 = s.m[8]*AM28_5
    FB38_5 = s.m[8]*AM38_5
    FM18_5 = FM19_5*C9+FM39_5*S9
    FM28_5 = FB28_5+FM29_5
    FM38_5 = FB38_5-FM19_5*S9+FM39_5*C9
    CM18_5 = CM19_5*C9+CM39_5*S9+s.dpt[2,8]*(-FM19_5*S9+FM39_5*C9)
    CM38_5 = -CM19_5*S9+CM39_5*C9-s.dpt[2,8]*(FM19_5*C9+FM39_5*S9)
    FB18_6 = -s.m[8]*s.dpt[2,3]
    FB28_6 = s.m[8]*AM28_6
    FB38_6 = s.m[8]*AM38_6
    FM18_6 = FB18_6+FM19_6*C9+FM39_6*S9
    FM28_6 = FB28_6+FM29_6
    FM38_6 = FB38_6-FM19_6*S9+FM39_6*C9
    CM18_6 = CM19_6*C9+CM39_6*S9+s.dpt[2,8]*(-FM19_6*S9+FM39_6*C9)
    CM38_6 = -CM19_6*S9+CM39_6*C9-s.dpt[2,8]*(FM19_6*C9+FM39_6*S9)
    CM18_8 = CM19_8*C9+CM39_8*S9+s.dpt[2,8]*(-FM19_8*S9+FM39_8*C9)
    FA17 = -s.frc[1,7]+s.m[7]*AF17
    FA27 = -s.frc[2,7]+s.m[7]*AF27
    FA37 = -s.frc[3,7]+s.m[7]*AF37
    FB17_1 = s.m[7]*AM16_1
    FB27_1 = s.m[7]*AM27_1
    FB37_1 = s.m[7]*AM37_1
    FB17_2 = s.m[7]*AM16_2
    FB27_2 = s.m[7]*AM27_2
    FB37_2 = s.m[7]*AM37_2
    FB17_3 = s.m[7]*AM16_3
    FB27_3 = s.m[7]*AM27_3
    FB37_3 = s.m[7]*AM37_3
    FB17_4 = s.m[7]*AM17_4
    FB27_4 = s.m[7]*AM27_4
    FB37_4 = s.m[7]*AM37_4
    FB17_5 = s.m[7]*AM17_5
    FB27_5 = s.m[7]*AM27_5
    FB37_5 = s.m[7]*AM37_5
    FB17_6 = -s.m[7]*s.dpt[2,2]
    FB27_6 = s.m[7]*AM27_6
    FB37_6 = s.m[7]*AM37_6
    FF16 = -s.frc[1,11]-s.frc[1,12]-s.frc[1,6]+FA17+FF18
    FF26 = -s.frc[2,6]-s.frc[2,11]*C11-s.frc[2,12]*C12+s.frc[3,11]*S11+s.frc[3,12]*S12+FA27*C7-FA37*S7+FF28*C8-FF38*S8
    FF36 = -s.frc[3,6]-s.frc[2,11]*S11-s.frc[2,12]*S12-s.frc[3,11]*C11-s.frc[3,12]*C12+FA27*S7+FA37*C7+FF28*S8+FF38*C8
    CF16 = -s.trq[1,11]-s.trq[1,12]-s.trq[1,6]-s.trq[1,7]+CF18+s.dpt[2,2]*(FA27*S7+FA37*C7)+s.dpt[2,3]*(FF28*S8+FF38*C8)+s.dpt[2,5]*(-s.frc[2,11]*S11-s.frc[3,11]*C11)+s.dpt[2,6]*(-s.frc[2,12]*S12-s.frc[3,12]*C12)-s.dpt[3,2]*(FA27*C7-FA37*S7)-s.dpt[3,5]*(-s.frc[2,11]*C11+s.frc[3,11]*S11)
    CF26 = -s.trq[2,6]-s.frc[1,11]*s.dpt[3,5]-s.trq[2,11]*C11-s.trq[2,12]*C12-s.trq[2,7]*C7+s.trq[3,11]*S11+s.trq[3,12]*S12+s.trq[3,7]*S7+CF28*C8-CF38*S8+FA17*s.dpt[3,2]-s.dpt[1,2]*(FA27*S7+FA37*C7)-s.dpt[1,3]*(FF28*S8+FF38*C8)-s.dpt[1,5]*(-s.frc[2,11]*S11-s.frc[3,11]*C11)-s.dpt[1,6]*(-s.frc[2,12]*S12-s.frc[3,12]*C12)
    CF36 = -s.trq[3,6]+s.frc[1,11]*s.dpt[2,5]+s.frc[1,12]*s.dpt[2,6]-s.trq[2,11]*S11-s.trq[2,12]*S12-s.trq[2,7]*S7-s.trq[3,11]*C11-s.trq[3,12]*C12-s.trq[3,7]*C7+CF28*S8+CF38*C8-FA17*s.dpt[2,2]-FF18*s.dpt[2,3]+s.dpt[1,2]*(FA27*C7-FA37*S7)+s.dpt[1,3]*(FF28*C8-FF38*S8)+s.dpt[1,5]*(-s.frc[2,11]*C11+s.frc[3,11]*S11)+s.dpt[1,6]*(-s.frc[2,12]*C12+s.frc[3,12]*S12)
    FB16_1 = s.m[6]*AM16_1
    FB26_1 = s.m[6]*AM26_1
    FB36_1 = s.m[6]*S5
    FM16_1 = FB16_1+FB17_1+FM18_1
    FM26_1 = FB26_1+FB27_1*C7-FB37_1*S7+FM28_1*C8-FM38_1*S8
    FM36_1 = FB36_1+FB27_1*S7+FB37_1*C7+FM28_1*S8+FM38_1*C8
    CM16_1 = CM18_1+s.dpt[2,2]*(FB27_1*S7+FB37_1*C7)+s.dpt[2,3]*(FM28_1*S8+FM38_1*C8)-s.dpt[3,2]*(FB27_1*C7-FB37_1*S7)
    CM26_1 = CM29_1*C8-CM38_1*S8+FB17_1*s.dpt[3,2]-s.dpt[1,2]*(FB27_1*S7+FB37_1*C7)-s.dpt[1,3]*(FM28_1*S8+FM38_1*C8)
    CM36_1 = CM29_1*S8+CM38_1*C8-FB17_1*s.dpt[2,2]-FM18_1*s.dpt[2,3]+s.dpt[1,2]*(FB27_1*C7-FB37_1*S7)+s.dpt[1,3]*(FM28_1*C8-FM38_1*S8)
    FB16_2 = s.m[6]*AM16_2
    FB26_2 = s.m[6]*AM26_2
    FB36_2 = s.m[6]*AM35_2
    FM16_2 = FB16_2+FB17_2+FM18_2
    FM26_2 = FB26_2+FB27_2*C7-FB37_2*S7+FM28_2*C8-FM38_2*S8
    FM36_2 = FB36_2+FB27_2*S7+FB37_2*C7+FM28_2*S8+FM38_2*C8
    CM16_2 = CM18_2+s.dpt[2,2]*(FB27_2*S7+FB37_2*C7)+s.dpt[2,3]*(FM28_2*S8+FM38_2*C8)-s.dpt[3,2]*(FB27_2*C7-FB37_2*S7)
    CM26_2 = CM29_2*C8-CM38_2*S8+FB17_2*s.dpt[3,2]-s.dpt[1,2]*(FB27_2*S7+FB37_2*C7)-s.dpt[1,3]*(FM28_2*S8+FM38_2*C8)
    CM36_2 = CM29_2*S8+CM38_2*C8-FB17_2*s.dpt[2,2]-FM18_2*s.dpt[2,3]+s.dpt[1,2]*(FB27_2*C7-FB37_2*S7)+s.dpt[1,3]*(FM28_2*C8-FM38_2*S8)
    FB16_3 = s.m[6]*AM16_3
    FB26_3 = s.m[6]*AM26_3
    FB36_3 = s.m[6]*AM35_3
    FM16_3 = FB16_3+FB17_3+FM18_3
    FM26_3 = FB26_3+FB27_3*C7-FB37_3*S7+FM28_3*C8-FM38_3*S8
    FM36_3 = FB36_3+FB27_3*S7+FB37_3*C7+FM28_3*S8+FM38_3*C8
    CM16_3 = CM18_3+s.dpt[2,2]*(FB27_3*S7+FB37_3*C7)+s.dpt[2,3]*(FM28_3*S8+FM38_3*C8)-s.dpt[3,2]*(FB27_3*C7-FB37_3*S7)
    CM26_3 = CM29_3*C8-CM38_3*S8+FB17_3*s.dpt[3,2]-s.dpt[1,2]*(FB27_3*S7+FB37_3*C7)-s.dpt[1,3]*(FM28_3*S8+FM38_3*C8)
    CM36_3 = CM29_3*S8+CM38_3*C8-FB17_3*s.dpt[2,2]-FM18_3*s.dpt[2,3]+s.dpt[1,2]*(FB27_3*C7-FB37_3*S7)+s.dpt[1,3]*(FM28_3*C8-FM38_3*S8)
    CM16_4 = CM18_4+s.dpt[2,2]*(FB27_4*S7+FB37_4*C7)+s.dpt[2,3]*(FM28_4*S8+FM38_4*C8)-s.dpt[3,2]*(FB27_4*C7-FB37_4*S7)
    CM26_4 = CM29_4*C8-CM38_4*S8+FB17_4*s.dpt[3,2]-s.dpt[1,2]*(FB27_4*S7+FB37_4*C7)-s.dpt[1,3]*(FM28_4*S8+FM38_4*C8)
    CM36_4 = CM29_4*S8+CM38_4*C8-FB17_4*s.dpt[2,2]-FM18_4*s.dpt[2,3]+s.dpt[1,2]*(FB27_4*C7-FB37_4*S7)+s.dpt[1,3]*(FM28_4*C8-FM38_4*S8)
    CM16_5 = CM18_5+s.dpt[2,2]*(FB27_5*S7+FB37_5*C7)+s.dpt[2,3]*(FM28_5*S8+FM38_5*C8)-s.dpt[3,2]*(FB27_5*C7-FB37_5*S7)
    CM26_5 = CM29_5*C8-CM38_5*S8+FB17_5*s.dpt[3,2]-s.dpt[1,2]*(FB27_5*S7+FB37_5*C7)-s.dpt[1,3]*(FM28_5*S8+FM38_5*C8)
    CM36_5 = CM29_5*S8+CM38_5*C8-FB17_5*s.dpt[2,2]-FM18_5*s.dpt[2,3]+s.dpt[1,2]*(FB27_5*C7-FB37_5*S7)+s.dpt[1,3]*(FM28_5*C8-FM38_5*S8)
    CM36_6 = CM29_6*S8+CM38_6*C8-FB17_6*s.dpt[2,2]-FM18_6*s.dpt[2,3]+s.dpt[1,2]*(FB27_6*C7-FB37_6*S7)+s.dpt[1,3]*(FM28_6*C8-FM38_6*S8)
    FF15 = FF16*C6-FF26*S6
    FF25 = FF16*S6+FF26*C6
    CF15 = CF16*C6-CF26*S6
    CF25 = CF16*S6+CF26*C6
    FM15_1 = FM16_1*C6-FM26_1*S6
    FM25_1 = FM16_1*S6+FM26_1*C6
    CM15_1 = CM16_1*C6-CM26_1*S6
    CM25_1 = CM16_1*S6+CM26_1*C6
    FM15_2 = FM16_2*C6-FM26_2*S6
    FM25_2 = FM16_2*S6+FM26_2*C6
    CM15_2 = CM16_2*C6-CM26_2*S6
    CM25_2 = CM16_2*S6+CM26_2*C6
    FM15_3 = FM16_3*C6-FM26_3*S6
    FM25_3 = FM16_3*S6+FM26_3*C6
    CM15_3 = CM16_3*C6-CM26_3*S6
    CM25_3 = CM16_3*S6+CM26_3*C6
    CM15_4 = CM16_4*C6-CM26_4*S6
    CM25_4 = CM16_4*S6+CM26_4*C6
    CM25_5 = CM16_5*S6+CM26_5*C6
    FF14 = FF15*C5+FF36*S5
    FF34 = -FF15*S5+FF36*C5
    CF14 = CF15*C5+CF36*S5
    FM14_1 = FM15_1*C5+FM36_1*S5
    FM34_1 = -FM15_1*S5+FM36_1*C5
    CM14_1 = CM15_1*C5+CM36_1*S5
    FM34_2 = -FM15_2*S5+FM36_2*C5
    CM14_2 = CM15_2*C5+CM36_2*S5
    FM34_3 = -FM15_3*S5+FM36_3*C5
    CM14_3 = CM15_3*C5+CM36_3*S5
    CM14_4 = CM15_4*C5+CM36_4*S5
    FF23 = FF25*C4-FF34*S4
    FF33 = FF25*S4+FF34*C4
    FM23_1 = FM25_1*C4-FM34_1*S4
    FM33_1 = FM25_1*S4+FM34_1*C4
    FM23_2 = FM25_2*C4-FM34_2*S4
    FM33_2 = FM25_2*S4+FM34_2*C4
    FM33_3 = FM25_3*S4+FM34_3*C4
 
# Symbolic model output

    c[1] = FF14
    c[2] = FF23
    c[3] = FF33
    c[4] = CF14
    c[5] = CF25
    c[6] = CF36
    c[7] = -s.trq[1,7]
    c[8] = CF18
    c[9] = CF29
    c[10] = -s.trq[2,10]
    c[11] = -s.trq[1,11]
    c[12] = -s.trq[1,12]
    M[1,1] = FM14_1
    M[1,2] = FM23_1
    M[1,3] = FM33_1
    M[1,4] = CM14_1
    M[1,5] = CM25_1
    M[1,6] = CM36_1
    M[1,8] = CM18_1
    M[1,9] = CM29_1
    M[2,1] = FM23_1
    M[2,2] = FM23_2
    M[2,3] = FM33_2
    M[2,4] = CM14_2
    M[2,5] = CM25_2
    M[2,6] = CM36_2
    M[2,8] = CM18_2
    M[2,9] = CM29_2
    M[3,1] = FM33_1
    M[3,2] = FM33_2
    M[3,3] = FM33_3
    M[3,4] = CM14_3
    M[3,5] = CM25_3
    M[3,6] = CM36_3
    M[3,8] = CM18_3
    M[3,9] = CM29_3
    M[4,1] = CM14_1
    M[4,2] = CM14_2
    M[4,3] = CM14_3
    M[4,4] = CM14_4
    M[4,5] = CM25_4
    M[4,6] = CM36_4
    M[4,8] = CM18_4
    M[4,9] = CM29_4
    M[5,1] = CM25_1
    M[5,2] = CM25_2
    M[5,3] = CM25_3
    M[5,4] = CM25_4
    M[5,5] = CM25_5
    M[5,6] = CM36_5
    M[5,8] = CM18_5
    M[5,9] = CM29_5
    M[6,1] = CM36_1
    M[6,2] = CM36_2
    M[6,3] = CM36_3
    M[6,4] = CM36_4
    M[6,5] = CM36_5
    M[6,6] = CM36_6
    M[6,8] = CM18_6
    M[6,9] = CM29_6
    M[8,1] = CM18_1
    M[8,2] = CM18_2
    M[8,3] = CM18_3
    M[8,4] = CM18_4
    M[8,5] = CM18_5
    M[8,6] = CM18_6
    M[8,8] = CM18_8
    M[8,9] = CM29_8
    M[9,1] = CM29_1
    M[9,2] = CM29_2
    M[9,3] = CM29_3
    M[9,4] = CM29_4
    M[9,5] = CM29_5
    M[9,6] = CM29_6
    M[9,8] = CM29_8
    M[9,9] = CM29_9

# Number of continuation lines = 0


